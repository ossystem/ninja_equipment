info:
  title: Ninja equipment
  version: 0.0.1
  description: API for online shop selling ninja equipment
produces:
  - application/json
schemes:
  - https
  - http
components:
  securitySchemes:
    BearerAuth:
      type: https
      scheme: bearer
host: localhost
swagger: '2.0'
paths:
  /login:
    post:
      summary: Returns JWT.
      description: login
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            examples:
              - email: test@test.com
                password: test
      responses:
        '200':
          description: login were succesfull
          examples:
            - token: jwt_token
              expires: '2018-07-17T07:17:40.554Z'
  /order:
    post:
      summary: list order
      description: order
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            examples:
              - {}
      responses:
        '200':
          description: login were succesfull
          examples:
            - - id: 7a663591-9bff-44ab-a572-688610f0d568
                user_id: 0464b7b0-2afb-4ef5-b44f-9d509d9a90d4
                product_id: 0176f6b1-9ec1-436f-bc0e-53a1fe5b9039
                product:
                  name: Lightweight Taekwondo Uniform
                  price: '17.95'
                  image: >-
                    https://www.karatemart.com/images/products/large/lightweight-taekwondo-uniform-8453700.jpg
                user:
                  email: test@fff.com
    put:
      summary: create new order
      description: create order by product_id
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            examples:
              - product_id: 0176f6b1-9ec1-436f-bc0e-53a1fe5b9039
      responses:
        '200':
          description: login were succesfull
          examples:
            - id: 7a663591-9bff-44ab-a572-688610f0d568
              product_id: 0176f6b1-9ec1-436f-bc0e-53a1fe5b9039
              user_id: 0464b7b0-2afb-4ef5-b44f-9d509d9a90d4
  /product:
    post:
      summary: >-
        list Products with pagination, simple filtering by category and search
        by products title
      description: product
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            examples:
              page: 1
              start: 0
              limit: 25
              group: null
              property: null
              direction: ASC
              sort:
                - property: name
                  direction: ASC
              filter:
                - property: category_id
                  value: 38905470-accb-4905-8091-8418f6ea8ed9
                - property: '#search'
                  value: fff
      responses:
        '200':
          description: succesfull
          examples:
            - token: some_jwt_token
              expires: '2018-07-17T07:17:40.554Z'
  '/product/{productId}':
    get:
      summary: show details of a certain Product
      description: >-
        show details of a certain Product (name, image URL, price, description
        and category)
      parameters:
        - in: path
          name: productId
          type: integer
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: succesfull
          examples:
            - id: 7a663591-9bff-44ab-a572-688610f0d568
              product_id: 0176f6b1-9ec1-436f-bc0e-53a1fe5b9039
              user_id: 0464b7b0-2afb-4ef5-b44f-9d509d9a90d4
  /register:
    post:
      summary: Returns a profile data.
      description: register
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            examples:
              email: test@fff.com
              password: 1
      responses:
        '200':
          description: register were succesfull
          examples:
            - id: some id
              email: test@fff.com
definitions: {}
responses: {}
parameters: {}
securityDefinitions: {}
tags: []
